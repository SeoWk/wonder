<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ez.wonder.member.model.MemberDAO">
   <insert id="insertMember" parameterType="memberVo">
      <selectKey resultType="int" keyProperty="memNo" order="BEFORE">
         select MEMBER_seq.nextval from dual
      </selectKey>
      insert into member(mem_no,user_id,name,pwd,nickname,email,tel)
      values(#{memNo},#{userId},#{name},#{pwd},#{nickname},#{email},#{tel})
   </insert>
   
   <select id="duplicateId" parameterType="String" resultType="int">
   select count(*) from member 
   where user_id=#{userId}
   </select>
   
   <select id="selectPwd" parameterType="string" resultType="String">
      select pwd from member
      where user_id=#{userId} and outdate is null
   </select>

   <select id="selectByUserid" parameterType="string" resultType="memberVo">
      select * from member where user_id=#{userId}
   </select>
    <update id="deleteMember">
      update member set outdate=sysdate 
      where user_id=#{userId}
   </update>
   
    <select id="findUserId" parameterType="memberVo" resultType="memberVo">
      select * from member where name=#{name} and email=#{email}
   </select>
    <select id="findPwd" parameterType="memberVo" resultType="String">
      select pwd from member
      where user_id=#{userId} and name=#{name} and email=#{email} 
   </select>
	<update id="updatePwd" parameterType="memberVo">
		update member
		set pwd=#{pwd}
		where email=#{email}
	</update>   
   
   
   <select id="selectSeller" parameterType="string" resultType="expertVo">
		select * from expertMemberView where user_id=#{userId} and (file_type is null or file_type='PROFILE')
	</select>
	
   <select id="selectSellerImg" parameterType="string" resultType="expertVo">
		select * from expertMemberView where user_id=#{userId} and file_type='PROFILE'
	</select>


	<!-- 관리자(admin) 시작  -->
   <select id="selectAdminPwd" parameterType="string" resultType="String">
      select admin_pwd from admin
      where admin_id=#{adminId}
   </select>

   <select id="selectByAdminId" parameterType="string" resultType="adminVo">
      select * from admin where admin_id=#{adminId}
   </select>
    <!-- 관리자(admin) 끝 -->
</mapper>

<!-- 
create or replace view expertMemberView
as
select A.*, B.file_name, B.file_type from 
(select m.mem_no, e.*,  m.name, m.pwd, m.nickname, m.email, m.tel, m.regdate
from expert_info e join member m
on e.user_id=m.user_id)A left outer join expert_image B
on A.user_id=B.user_id;
-->